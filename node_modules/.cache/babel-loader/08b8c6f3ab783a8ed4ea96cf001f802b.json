{"ast":null,"code":"var _jsxFileName = \"/Users/yarma/Desktop/HW_React/goit-react-hw-01-components/src/components/FriendList/FriendList.jsx\";\nimport { FriendListItem } from './FriendListItem';\nimport styles from '../FriendList/FriendList.module.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.friend__list,\n    children: friends.map(_ref2 => {\n      let {\n        avatar,\n        name,\n        isOnline,\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(FriendListItem, {\n        avatar: avatar,\n        name: name,\n        isOnline: isOnline\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["/Users/yarma/Desktop/HW_React/goit-react-hw-01-components/src/components/FriendList/FriendList.jsx"],"names":["FriendListItem","styles","PropTypes","FriendList","friends","friend__list","map","avatar","name","isOnline","id","propTypes","arrayOf","shape","string","isRequired","bool","number"],"mappings":";AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACzC,sBACE;AAAI,IAAA,SAAS,EAAEH,MAAM,CAACI,YAAtB;AAAA,cACGD,OAAO,CAACE,GAAR,CAAY,SAAoC;AAAA,UAAnC;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,IAAV;AAAgBC,QAAAA,QAAhB;AAA0BC,QAAAA;AAA1B,OAAmC;AAC/C,0BACE,QAAC,cAAD;AACE,QAAA,MAAM,EAAEH,MADV;AAEE,QAAA,IAAI,EAAEC,IAFR;AAGE,QAAA,QAAQ,EAAEC;AAHZ,SAIOC,EAJP;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfM;KAAMP,U;AAiBbA,UAAU,CAACQ,SAAX,GAAuB;AACrBP,EAAAA,OAAO,EAAEF,SAAS,CAACU,OAAV,CACPV,SAAS,CAACW,KAAV,CAAgB;AACdN,IAAAA,MAAM,EAAEL,SAAS,CAACY,MAAV,CAAiBC,UADX;AAEdP,IAAAA,IAAI,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UAFT;AAGdN,IAAAA,QAAQ,EAAEP,SAAS,CAACc,IAAV,CAAeD,UAHX;AAIdL,IAAAA,EAAE,EAAER,SAAS,CAACe,MAAV,CAAiBF;AAJP,GAAhB,CADO;AADY,CAAvB","sourcesContent":["import { FriendListItem } from './FriendListItem';\nimport styles from '../FriendList/FriendList.module.css';\nimport PropTypes from 'prop-types';\n\nexport const FriendList = ({ friends }) => {\n  return (\n    <ul className={styles.friend__list}>\n      {friends.map(({ avatar, name, isOnline, id }) => {\n        return (\n          <FriendListItem\n            avatar={avatar}\n            name={name}\n            isOnline={isOnline}\n            key={id}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n"]},"metadata":{},"sourceType":"module"}