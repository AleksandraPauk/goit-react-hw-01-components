{"ast":null,"code":"var _jsxFileName = \"/Users/yarma/Desktop/HW_React/goit-react-hw-01-components/src/components/FriendList/FriendListItem.jsx\";\nimport styles from \"../FriendList/FriendListItem.module.css\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendListItem = _ref => {\n  let {\n    avatar,\n    name,\n    isOnline\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.item,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.avatar,\n      src: avatar,\n      alt: \"User avatar\",\n      width: \"48\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.name,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n};\n_c = FriendListItem;\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendListItem\");","map":{"version":3,"sources":["/Users/yarma/Desktop/HW_React/goit-react-hw-01-components/src/components/FriendList/FriendListItem.jsx"],"names":["styles","PropTypes","FriendListItem","avatar","name","isOnline","item","status","propTypes","string","isRequired","bool"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,yCAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,OAAO,MAAMC,cAAc,GAAG,QAAgC;AAAA,MAA/B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,GAA+B;AAC5D,sBACI;AAAI,IAAA,SAAS,EAAEL,MAAM,CAACM,IAAtB;AAAA,4BACI;AAAM,MAAA,SAAS,EAAEN,MAAM,CAACO;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAEP,MAAM,CAACG,MAAvB;AAA+B,MAAA,GAAG,EAAEA,MAApC;AAA4C,MAAA,GAAG,EAAC,aAAhD;AAA8D,MAAA,KAAK,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAG,MAAA,SAAS,EAAEH,MAAM,CAACI,IAArB;AAAA,gBAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOD,CARM;KAAMF,c;AAUbA,cAAc,CAACM,SAAf,GAA2B;AACvBL,EAAAA,MAAM,EAAEF,SAAS,CAACQ,MAAV,CAAiBC,UADF;AAEvBN,EAAAA,IAAI,EAAEH,SAAS,CAACQ,MAAV,CAAiBC,UAFA;AAGvBL,EAAAA,QAAQ,EAAEJ,SAAS,CAACU,IAAV,CAAeD;AAHF,CAA3B","sourcesContent":["import styles from \"../FriendList/FriendListItem.module.css\";\nimport PropTypes from \"prop-types\";\n\n\nexport const FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n      <li className={styles.item}>\n          <span className={styles.status}></span>\n          <img className={styles.avatar} src={avatar} alt=\"User avatar\" width=\"48\" />\n          <p className={styles.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired\n}"]},"metadata":{},"sourceType":"module"}