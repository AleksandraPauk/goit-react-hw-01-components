{"ast":null,"code":"var _jsxFileName = \"/Users/yarma/Desktop/HW_React/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx\";\nimport PropTypes from 'prop-types';\nimport styles from '../Statistics/Statistics.module.css';\nimport { getRandomHexColor } from '../../utils/getRandomHexColor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Statistics = _ref => {\n  let {\n    title,\n    stats\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.statistics,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.title,\n      children: title || 'Upload stats'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.stat__list,\n      children: stats.map(_ref2 => {\n        let {\n          id,\n          label,\n          percentage\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.item,\n          style: {\n            backgroundColor: getRandomHexColor()\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.label,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.percentage,\n            children: [percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistics;\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/Users/yarma/Desktop/HW_React/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx"],"names":["PropTypes","styles","getRandomHexColor","Statistics","title","stats","statistics","stat__list","map","id","label","percentage","item","backgroundColor","propTypes","string","arrayOf","shape","isRequired","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AAC9C,sBACE;AAAS,IAAA,SAAS,EAAEJ,MAAM,CAACK,UAA3B;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEL,MAAM,CAACG,KAAtB;AAAA,gBAA8BA,KAAK,IAAI;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAEH,MAAM,CAACM,UAAtB;AAAA,gBACGF,KAAK,CAACG,GAAN,CAAU;AAAA,YAAC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,KAAN;AAAaC,UAAAA;AAAb,SAAD;AAAA,4BACT;AACE,UAAA,SAAS,EAAEV,MAAM,CAACW,IADpB;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAEX,iBAAiB;AAApC,WAHT;AAAA,kCAKE;AAAM,YAAA,SAAS,EAAED,MAAM,CAACS,KAAxB;AAAA,sBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAM,YAAA,SAAS,EAAET,MAAM,CAACU,UAAxB;AAAA,uBAAqCA,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WAEOF,EAFP;AAAA;AAAA;AAAA;AAAA,gBADS;AAAA,OAAV;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlBM;KAAMN,U;AAoBbA,UAAU,CAACW,SAAX,GAAuB;AACrBV,EAAAA,KAAK,EAAEJ,SAAS,CAACe,MADI;AAErBV,EAAAA,KAAK,EAAEL,SAAS,CAACgB,OAAV,CACLhB,SAAS,CAACiB,KAAV,CAAgB;AACdR,IAAAA,EAAE,EAAET,SAAS,CAACe,MAAV,CAAiBG,UADP;AAEdR,IAAAA,KAAK,EAAEV,SAAS,CAACe,MAAV,CAAiBG,UAFV;AAGdP,IAAAA,UAAU,EAAEX,SAAS,CAACmB,MAAV,CAAiBD;AAHf,GAAhB,CADK;AAFc,CAAvB","sourcesContent":["import PropTypes from 'prop-types';\nimport styles from '../Statistics/Statistics.module.css';\nimport { getRandomHexColor } from '../../utils/getRandomHexColor';\n\nexport const Statistics = ({ title, stats }) => {\n  return (\n    <section className={styles.statistics}>\n      <h2 className={styles.title}>{title || 'Upload stats'}</h2>\n      <ul className={styles.stat__list}>\n        {stats.map(({ id, label, percentage }) => (\n          <li\n            className={styles.item}\n            key={id}\n            style={{ backgroundColor: getRandomHexColor() }}\n          >\n            <span className={styles.label}>{label}</span>\n            <span className={styles.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n"]},"metadata":{},"sourceType":"module"}